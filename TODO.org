
* func::apply:
  
  for Lie group transforms ?
  (g, x) -> g(x)

** this provides the action of alg<G> over domain<G> ?
=> makes more sense to implement ((co)tangent) group actions ?
=> actually apply is a group action
=> meh

* lie brackets/cobrackets

* machine precision ?
  std::numeric_limits<double>::epsilon

* harmonize make_ ... and friends

* SO3
  - exp/log
  - so3, so3T ?

* dual quaternions (?), rigid transforms

* SE3
  - se3
  - se3T

* SL3
  - sl3
  - sl3T

* complex numbers ?
  - CC 

* rigid body kinematics
  
* splines 
  
* lambdas ?

* get rid of the nasty ::base member type ?

** used to get nested push::push types right  
  
** does not seem possible, we need to flag base class one way or another :-/
   
* modules ?
  to include parts of the lib directly

* lua interface ?
* rename to  math0x


